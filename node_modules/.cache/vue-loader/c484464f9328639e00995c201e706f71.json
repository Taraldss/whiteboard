{"remainingRequest":"/home/tarald/Source/whiteboard/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/tarald/Source/whiteboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/tarald/Source/whiteboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/tarald/Source/whiteboard/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/home/tarald/Source/whiteboard/src/App.vue","mtime":1535039588893},{"path":"/home/tarald/Source/whiteboard/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/tarald/Source/whiteboard/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/tarald/Source/whiteboard/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/tarald/Source/whiteboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticStyle: { overflow: \"visible\" }, attrs: { id: \"app\" } },\n    [\n      _c(\"header\", [\n        _c(\"h1\", [_vm._v(\"Whiteboard\")]),\n        _c(\"div\", [\n          _c(\n            \"button\",\n            {\n              attrs: { id: \"add\" },\n              on: {\n                click: function($event) {\n                  _vm.add()\n                }\n              }\n            },\n            [_vm._v(\" Add new \")]\n          ),\n          _c(\n            \"button\",\n            {\n              attrs: { id: \"remove\" },\n              on: {\n                click: function($event) {\n                  _vm.remove()\n                }\n              }\n            },\n            [_vm._v(\" Remove \")]\n          )\n        ]),\n        _vm.add\n          ? _c(\"section\", [\n              _c(\"textarea\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.message,\n                    expression: \"message\"\n                  }\n                ],\n                attrs: { placeholder: \"ur mom gay\" },\n                domProps: { value: _vm.message },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.message = $event.target.value\n                  }\n                }\n              })\n            ])\n          : _vm._e()\n      ]),\n      _c(\"div\", { staticClass: \"noteboard\" }, [\n        _c(\n          \"section\",\n          { staticClass: \"tasks\" },\n          [\n            _c(\"h2\", [_vm._v(\" Tasks \")]),\n            _c(\n              \"draggable\",\n              {\n                staticClass: \"drag\",\n                attrs: { options: { group: \"sections\" } },\n                on: {\n                  start: function($event) {\n                    _vm.drag = true\n                  },\n                  end: function($event) {\n                    _vm.drag = false\n                  }\n                },\n                model: {\n                  value: _vm.groups.tasks,\n                  callback: function($$v) {\n                    _vm.$set(_vm.groups, \"tasks\", $$v)\n                  },\n                  expression: \"groups.tasks\"\n                }\n              },\n              _vm._l(_vm.groups.tasks, function(element) {\n                return _c(\"div\", { key: element.id }, [\n                  _vm._v(_vm._s(element.content))\n                ])\n              })\n            )\n          ],\n          1\n        ),\n        _c(\n          \"section\",\n          { staticClass: \"ongoing\" },\n          [\n            _c(\"h2\", [_vm._v(\" Ongoing \")]),\n            _c(\n              \"draggable\",\n              {\n                staticClass: \"drag\",\n                attrs: { options: { group: \"sections\" } },\n                on: {\n                  start: function($event) {\n                    _vm.drag = true\n                  },\n                  end: function($event) {\n                    _vm.drag = false\n                  }\n                },\n                model: {\n                  value: _vm.groups.ongoing,\n                  callback: function($$v) {\n                    _vm.$set(_vm.groups, \"ongoing\", $$v)\n                  },\n                  expression: \"groups.ongoing\"\n                }\n              },\n              _vm._l(_vm.groups.ongoing, function(element) {\n                return _c(\"div\", { key: element.id }, [\n                  _vm._v(_vm._s(element.content))\n                ])\n              })\n            )\n          ],\n          1\n        ),\n        _c(\n          \"section\",\n          { staticClass: \"testing\" },\n          [\n            _c(\"h2\", [_vm._v(\" Testing \")]),\n            _c(\n              \"draggable\",\n              {\n                staticClass: \"drag\",\n                attrs: { options: { group: \"sections\" } },\n                on: {\n                  start: function($event) {\n                    _vm.drag = true\n                  },\n                  end: function($event) {\n                    _vm.drag = false\n                  }\n                },\n                model: {\n                  value: _vm.groups.testing,\n                  callback: function($$v) {\n                    _vm.$set(_vm.groups, \"testing\", $$v)\n                  },\n                  expression: \"groups.testing\"\n                }\n              },\n              _vm._l(_vm.groups.testing, function(element) {\n                return _c(\"div\", { key: element.id }, [\n                  _vm._v(_vm._s(element.content))\n                ])\n              })\n            )\n          ],\n          1\n        ),\n        _c(\n          \"section\",\n          { staticClass: \"completed\" },\n          [\n            _c(\"h2\", [_vm._v(\" Completed \")]),\n            _c(\n              \"draggable\",\n              {\n                staticClass: \"drag\",\n                attrs: { options: { group: \"sections\" } },\n                on: {\n                  start: function($event) {\n                    _vm.drag = true\n                  },\n                  end: function($event) {\n                    _vm.drag = false\n                  }\n                },\n                model: {\n                  value: _vm.groups.completed,\n                  callback: function($$v) {\n                    _vm.$set(_vm.groups, \"completed\", $$v)\n                  },\n                  expression: \"groups.completed\"\n                }\n              },\n              _vm._l(_vm.groups.completed, function(element) {\n                return _c(\"div\", { key: element.id }, [\n                  _vm._v(_vm._s(element.content))\n                ])\n              })\n            )\n          ],\n          1\n        )\n      ])\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}